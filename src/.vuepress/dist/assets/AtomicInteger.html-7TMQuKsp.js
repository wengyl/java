import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as r,o as a}from"./app-CzKZ5RuK.js";const n={};function c(i,e){return a(),o("div",null,e[0]||(e[0]=[r("p",null,"AtomicInteger和AtomicLong都是通过cas死循环更新维护值，在并发量大的情况下，失败率很高，导致不断循环，CPU使用率飙升。 LongAdder在并发量低的情况下，也是通过cas死循环更新维护值，在并发量大的情况下，通过Cell[]数组更新维护值，相当于分段锁，在并发情况下，只能保证最终一致性。如果要求强一致性，还是要使用AtomicLong。 cas存在aba问题，全称Compare and swap，比较寄存器的值与内存的值，如果相同，就把两个值进行交换，但是这个操作不是原子的，当进行比较的时候，可能有其他线程把这个值从a改成b，又改回a，当前线程无法感知到，不知道这个值被修改过。 解决aba问题，可以引入版本号解决，例如AtomicStampedReference。",-1)]))}const s=t(n,[["render",c],["__file","AtomicInteger.html.vue"]]),l=JSON.parse('{"path":"/concurrency/AtomicInteger.html","title":"","lang":"zh-CN","frontmatter":{"description":"AtomicInteger和AtomicLong都是通过cas死循环更新维护值，在并发量大的情况下，失败率很高，导致不断循环，CPU使用率飙升。 LongAdder在并发量低的情况下，也是通过cas死循环更新维护值，在并发量大的情况下，通过Cell[]数组更新维护值，相当于分段锁，在并发情况下，只能保证最终一致性。如果要求强一致性，还是要使用Atomi...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/javabaguwen/concurrency/AtomicInteger.html"}],["meta",{"property":"og:site_name","content":"Java八股文网"}],["meta",{"property":"og:description","content":"AtomicInteger和AtomicLong都是通过cas死循环更新维护值，在并发量大的情况下，失败率很高，导致不断循环，CPU使用率飙升。 LongAdder在并发量低的情况下，也是通过cas死循环更新维护值，在并发量大的情况下，通过Cell[]数组更新维护值，相当于分段锁，在并发情况下，只能保证最终一致性。如果要求强一致性，还是要使用Atomi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-29T06:25:28.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:modified_time","content":"2025-04-29T06:25:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-29T06:25:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1745907928000,"updatedTime":1745907928000,"contributors":[{"name":"Yideng","email":"oointer@163.com","commits":1}]},"readingTime":{"minutes":0.77,"words":230},"filePathRelative":"concurrency/AtomicInteger.md","localizedDate":"2025年4月29日","autoDesc":true}');export{s as comp,l as data};
