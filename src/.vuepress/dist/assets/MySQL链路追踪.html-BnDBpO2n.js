import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,e as a,o as n}from"./app-CzKZ5RuK.js";const o={};function r(d,e){return n(),i("div",null,e[0]||(e[0]=[a('<p>MySQL优化器可以生成Explain执行计划，我们可以通过执行计划查看是否使用了索引，使用了哪种索引？ 但是到底为什么会使用这个索引，我们却无从得知。 好在MySQL提供了一个好用的工具 — <code>optimizer trace（优化器追踪）</code>，可以帮助我们查看优化器生成执行计划的整个过程，以及做出的各种决策，包括访问表的方法、各种开销计算、各种转换等。</p><h2 id="_1-查看optimizer-trace配置" tabindex="-1"><a class="header-anchor" href="#_1-查看optimizer-trace配置"><span>1. 查看optimizer trace配置</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>show variables like &#39;%optimizer_trace%&#39;;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://files.mdnice.com/user/33013/b18b417d-51ef-4aa8-a97f-53092e9adf66.png#id=YUWSh&amp;originHeight=185&amp;originWidth=794&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" loading="lazy"> 输出参数详解：</p><blockquote><p>optimizer_trace 主配置，enabled的on表示开启，off表示关闭，one_line表示是否展示成一行 optimizer_trace_features 表示优化器的可选特性，包括贪心搜索、范围优化等 optimizer_trace_limit 表示优化器追踪最大显示数目，默认是1条 optimizer_trace_max_mem_size 表示优化器追踪占用的最大容量 optimizer_trace_offset 表示显示的第一个优化器追踪的偏移量</p></blockquote><h2 id="_2-开启optimizer-trace" tabindex="-1"><a class="header-anchor" href="#_2-开启optimizer-trace"><span>2. 开启optimizer trace</span></a></h2><p><strong>optimizer trace</strong>默认是关闭，我们可以使用命令手动开启：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>SET optimizer_trace=&quot;enabled=on&quot;;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://files.mdnice.com/user/33013/fbb6803b-629c-44f0-af46-dfa0ed9a3035.png#id=ehIhl&amp;originHeight=169&amp;originWidth=381&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_3-线上问题复现" tabindex="-1"><a class="header-anchor" href="#_3-线上问题复现"><span>3. 线上问题复现</span></a></h2><p>先造点数据备用，创建一张用户表：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>CREATE TABLE `user` (\n  `id` int NOT NULL AUTO_INCREMENT COMMENT &#39;主键&#39;,\n  `name` varchar(100) NOT NULL COMMENT &#39;姓名&#39;,\n  `gender` tinyint NOT NULL COMMENT &#39;性别&#39;,\n  PRIMARY KEY (`id`),\n  KEY `idx_name` (`name`),\n  KEY `idx_gender_name` (`gender`,`name`)\n) ENGINE=InnoDB COMMENT=&#39;用户表&#39;;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建了两个索引，分别是(<code>name</code>)和(<code>gender</code>,<code>name</code>)。 执行一条SQL，看到底用到了哪个索引：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>select * from user where gender=0 and name=&#39;一灯&#39;;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://files.mdnice.com/user/33013/ae3d4c67-4175-4155-970b-b0b1b1b9a258.png#id=exqQu&amp;originHeight=129&amp;originWidth=1016&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" loading="lazy"> 跟期望的一致，优先使用了(<code>gender</code>,<code>name</code>)的联合索引，因为where条件中刚好有<strong>gender</strong>和<strong>name</strong>两个字段。 我们把这条SQL传参换一下试试：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>select * from user where gender=0 and name=&#39;张三&#39;;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://files.mdnice.com/user/33013/c0e02dab-8b8f-4983-82dd-2469e5f94f5d.png#id=ovqlL&amp;originHeight=129&amp;originWidth=983&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" loading="lazy"> 这次竟然用了(<code>name</code>)上面的索引，同一条SQL因为传参不同，而使用了不同的索引。 到这里，使用现有工具，我们已经无法排查分析，MySQL优化器为什么使用了(<code>name</code>)上的索引，而没有使用(<code>gender</code>,<code>name</code>)上的联合索引。 只能请今天的主角 —<code>optimizer trace（优化器追踪）</code>出场了。</p><h2 id="_3-使用optimizer-trace" tabindex="-1"><a class="header-anchor" href="#_3-使用optimizer-trace"><span>3. 使用optimizer trace</span></a></h2><p>使用<strong>optimizer trace</strong>查看优化器的选择过程：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>SELECT * FROM information_schema.OPTIMIZER_TRACE;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://files.mdnice.com/user/33013/53167348-ab09-4978-b3b6-a2dc2d7f742b.png#id=yakcC&amp;originHeight=178&amp;originWidth=975&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" loading="lazy"> 输出结果共有4列：</p><blockquote><p>QUERY 表示我们执行的查询语句 TRACE 优化器生成执行计划的过程（重点关注） MISSING_BYTES_BEYOND_MAX_MEM_SIZE 优化过程其余的信息会被显示在这一列 INSUFFICIENT_PRIVILEGES 表示是否有权限查看优化过程，0是，1否</p></blockquote><p>接下来我们看一下<strong>TRACE</strong>列的内容，里面的数据很多，我们重点分析一下<strong>range_scan_alternatives</strong>结果列，这个结果列展示了索引选择的过程。 <img src="https://files.mdnice.com/user/33013/d7498e24-608b-4a06-829a-67f40171a1cd.png#id=n8bdL&amp;originHeight=740&amp;originWidth=516&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" loading="lazy"> 输出结果字段含义：</p><blockquote><p>index 索引名称 ranges 查询范围 index_dives_for_eq_ranges 是否用到索引潜水的优化逻辑 rowid_ordered 是否按主键排序 using_mrr 是否使用mrr index_only 是否使用了覆盖索引 in_memory 使用内存大小 rows 预估扫描行数 cost 预估成本大小，值越小越好 chosen 是否被选择 cause 没有被选择的原因，cost表示成本过高</p></blockquote><p>从输出结果中，可以看到优化器最终选择了使用(<code>name</code>)索引，而(<code>gender</code>,<code>name</code>)索引因为成本过高没有被使用。 再也不用担心找不到MySQL用错索引的原因，赶紧用起来吧！</p>',25)]))}const p=t(o,[["render",r],["__file","MySQL链路追踪.html.vue"]]),m=JSON.parse('{"path":"/mysql/MySQL%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA.html","title":"","lang":"zh-CN","frontmatter":{"description":"MySQL优化器可以生成Explain执行计划，我们可以通过执行计划查看是否使用了索引，使用了哪种索引？ 但是到底为什么会使用这个索引，我们却无从得知。 好在MySQL提供了一个好用的工具 — optimizer trace（优化器追踪），可以帮助我们查看优化器生成执行计划的整个过程，以及做出的各种决策，包括访问表的方法、各种开销计算、各种转换等。 1...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/javabaguwen/mysql/MySQL%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA.html"}],["meta",{"property":"og:site_name","content":"Java八股文网"}],["meta",{"property":"og:description","content":"MySQL优化器可以生成Explain执行计划，我们可以通过执行计划查看是否使用了索引，使用了哪种索引？ 但是到底为什么会使用这个索引，我们却无从得知。 好在MySQL提供了一个好用的工具 — optimizer trace（优化器追踪），可以帮助我们查看优化器生成执行计划的整个过程，以及做出的各种决策，包括访问表的方法、各种开销计算、各种转换等。 1..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://files.mdnice.com/user/33013/b18b417d-51ef-4aa8-a97f-53092e9adf66.png#id=YUWSh&originHeight=185&originWidth=794&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title="}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-29T06:25:28.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:modified_time","content":"2025-04-29T06:25:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"https://files.mdnice.com/user/33013/b18b417d-51ef-4aa8-a97f-53092e9adf66.png#id=YUWSh&originHeight=185&originWidth=794&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=\\",\\"https://files.mdnice.com/user/33013/fbb6803b-629c-44f0-af46-dfa0ed9a3035.png#id=ehIhl&originHeight=169&originWidth=381&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=\\",\\"https://files.mdnice.com/user/33013/ae3d4c67-4175-4155-970b-b0b1b1b9a258.png#id=exqQu&originHeight=129&originWidth=1016&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=\\",\\"https://files.mdnice.com/user/33013/c0e02dab-8b8f-4983-82dd-2469e5f94f5d.png#id=ovqlL&originHeight=129&originWidth=983&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=\\",\\"https://files.mdnice.com/user/33013/53167348-ab09-4978-b3b6-a2dc2d7f742b.png#id=yakcC&originHeight=178&originWidth=975&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=\\",\\"https://files.mdnice.com/user/33013/d7498e24-608b-4a06-829a-67f40171a1cd.png#id=n8bdL&originHeight=740&originWidth=516&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=\\"],\\"dateModified\\":\\"2025-04-29T06:25:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 查看optimizer trace配置","slug":"_1-查看optimizer-trace配置","link":"#_1-查看optimizer-trace配置","children":[]},{"level":2,"title":"2. 开启optimizer trace","slug":"_2-开启optimizer-trace","link":"#_2-开启optimizer-trace","children":[]},{"level":2,"title":"3. 线上问题复现","slug":"_3-线上问题复现","link":"#_3-线上问题复现","children":[]},{"level":2,"title":"3. 使用optimizer trace","slug":"_3-使用optimizer-trace","link":"#_3-使用optimizer-trace","children":[]}],"git":{"createdTime":1745907928000,"updatedTime":1745907928000,"contributors":[{"name":"Yideng","email":"oointer@163.com","commits":1}]},"readingTime":{"minutes":3.29,"words":988},"filePathRelative":"mysql/MySQL链路追踪.md","localizedDate":"2025年4月29日","autoDesc":true}');export{p as comp,m as data};
