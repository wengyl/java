import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e as i,o as n}from"./app-CzKZ5RuK.js";const r={};function o(s,e){return n(),a("div",null,e[0]||(e[0]=[i(`<p>当一条SQL执行较慢，需要分析性能瓶颈，到底慢在哪？ 我们一般会使用<strong>Explain</strong>查看其执行计划，从执行计划中得知这条SQL有没有使用索引？使用了哪个索引？ <img src="https://javabaguwen.com/img/MySQL性能1.png" alt="image-20220806222612663.png" loading="lazy"> 但是执行计划显示内容不够详细，如果显示用到了某个索引，查询依然很慢，我们就无法得知具体是哪一步比较耗时？ 好在MySQL提供一个SQL性能分析工具 — <strong>Profile</strong>。 <strong>Profile</strong> 可以帮助我们分析SQL性能瓶颈和资源消耗情况。</p><h2 id="_1-查看profile配置" tabindex="-1"><a class="header-anchor" href="#_1-查看profile配置"><span>1. 查看Profile配置</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>show variables like &#39;%profil%&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://javabaguwen.com/img/MySQL性能2.png" alt="image-20220806224252303.png" tabindex="0" loading="lazy"><figcaption>image-20220806224252303.png</figcaption></figure><blockquote><p>have_profiling 表示是否支持profile功能，YES表示支持 profiling 表示是否开启profile功能，ON开启，OFF关闭，默认是关闭状态 profiling_history_size 表示保存最近15条历史数据</p></blockquote><h2 id="_2-开启profile功能" tabindex="-1"><a class="header-anchor" href="#_2-开启profile功能"><span>2. 开启Profile功能</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>set profiling=1;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://javabaguwen.com/img/MySQL性能3.png" alt="image-20220806224652421.png" loading="lazy"> 注意：修改配置，只对当前会话生效，会话关闭，<strong>Profile</strong>历史信息被清空。</p><h2 id="_3-使用profile" tabindex="-1"><a class="header-anchor" href="#_3-使用profile"><span>3. 使用Profile</span></a></h2><p>先造点数据，创建一张用户表：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>CREATE TABLE \`user\` (
  \`id\` int(11) NOT NULL AUTO_INCREMENT COMMENT &#39;主键ID&#39;,
  \`name\` varchar(100) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;姓名&#39;,
  \`age\` tinyint NOT NULL  DEFAULT 0 NULL,
  PRIMARY KEY (\`id\`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行一条耗时SQL：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>select * from user order by name;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>下面轮到主角<strong>Profile</strong>出场了。 我们执行的所有SQL语句都会被记录到<strong>Profile</strong>里面，包括执行失败的SQL语句。 可以使用<strong>show profiles</strong>命令查看： <img src="https://javabaguwen.com/img/MySQL性能4.png" alt="image-20220806230212047.png" loading="lazy"> 输出参数详解：</p><blockquote><p>Query_ID 表示自动分配的查询ID，顺序递增。 Duration 表示SQL语句执行耗时 Query 表示SQL语句内容</p></blockquote><p>然后，我们再使用<strong>Query_ID</strong>去<strong>Profile</strong>中查看具体每一步的耗时情况：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>show profile for query 1;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://javabaguwen.com/img/MySQL性能5.png" alt="image-20220806230723609.png" loading="lazy"> 可以清楚的看到耗时主要花在**创建排序索引（Creating sort index）**上面。 再试一条SQL：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>select distinct name from user;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://javabaguwen.com/img/MySQL性能6.png" alt="image-20220806231300522.png" loading="lazy"> 这次的耗时主要花在了，创建临时文件、拷贝文件到磁盘、发送数据、删除临时表上面。 由此，可以得知<strong>distinct</strong>函数会创建临时文件，提醒我们建索引。 我们还可以扩展一下这条分析语句，查看一下cpu和block io的使用情况：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>show profile cpu,block io for query 2;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://javabaguwen.com/img/MySQL性能7.png" alt="image-20220806232136871.png" loading="lazy"> 另外，其实所有<strong>Profile</strong>历史数据都被记录在<strong>information_schema.profiling</strong>表中，我们也可以查询表得到结果：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>select * from information_schema.profiling where Query_ID=2;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://javabaguwen.com/img/MySQL性能8.png" alt="image-20220806232935997.png" loading="lazy"> 以上数据都是基于<strong>MySQL5.7</strong>版本，在<strong>MySQL8.0</strong>版本的输出结果字段有些变化。 另外，细心的你应该发现了，在我们每执行完一条SQL，都显示了一条<strong>warning</strong>信息，我们查看一下具体的<strong>warning</strong>信息：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>show warnings;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://javabaguwen.com/img/MySQL性能9.png" alt="image-20220806234607577.png" loading="lazy"> 意思就是，<strong>Profile</strong>工具将来有可能被删除，不建议继续使用了。 好吧，下篇文章我们再一块学习一下MySQL提供的，用来替换<strong>Profile</strong>的最新性能瓶颈分析工具，使用更便捷。</p>`,26)]))}const d=t(r,[["render",o],["__file","performance.html.vue"]]),p=JSON.parse('{"path":"/mysql/performance.html","title":"","lang":"zh-CN","frontmatter":{"description":"当一条SQL执行较慢，需要分析性能瓶颈，到底慢在哪？ 我们一般会使用Explain查看其执行计划，从执行计划中得知这条SQL有没有使用索引？使用了哪个索引？ image-20220806222612663.png 但是执行计划显示内容不够详细，如果显示用到了某个索引，查询依然很慢，我们就无法得知具体是哪一步比较耗时？ 好在MySQL提供一个SQL性能分...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/javabaguwen/mysql/performance.html"}],["meta",{"property":"og:site_name","content":"Java八股文网"}],["meta",{"property":"og:description","content":"当一条SQL执行较慢，需要分析性能瓶颈，到底慢在哪？ 我们一般会使用Explain查看其执行计划，从执行计划中得知这条SQL有没有使用索引？使用了哪个索引？ image-20220806222612663.png 但是执行计划显示内容不够详细，如果显示用到了某个索引，查询依然很慢，我们就无法得知具体是哪一步比较耗时？ 好在MySQL提供一个SQL性能分..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://javabaguwen.com/img/MySQL%E6%80%A7%E8%83%BD1.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-29T06:25:28.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:modified_time","content":"2025-04-29T06:25:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"https://javabaguwen.com/img/MySQL%E6%80%A7%E8%83%BD1.png\\",\\"https://javabaguwen.com/img/MySQL%E6%80%A7%E8%83%BD2.png\\",\\"https://javabaguwen.com/img/MySQL%E6%80%A7%E8%83%BD3.png\\",\\"https://javabaguwen.com/img/MySQL%E6%80%A7%E8%83%BD4.png\\",\\"https://javabaguwen.com/img/MySQL%E6%80%A7%E8%83%BD5.png\\",\\"https://javabaguwen.com/img/MySQL%E6%80%A7%E8%83%BD6.png\\",\\"https://javabaguwen.com/img/MySQL%E6%80%A7%E8%83%BD7.png\\",\\"https://javabaguwen.com/img/MySQL%E6%80%A7%E8%83%BD8.png\\",\\"https://javabaguwen.com/img/MySQL%E6%80%A7%E8%83%BD9.png\\"],\\"dateModified\\":\\"2025-04-29T06:25:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 查看Profile配置","slug":"_1-查看profile配置","link":"#_1-查看profile配置","children":[]},{"level":2,"title":"2. 开启Profile功能","slug":"_2-开启profile功能","link":"#_2-开启profile功能","children":[]},{"level":2,"title":"3. 使用Profile","slug":"_3-使用profile","link":"#_3-使用profile","children":[]}],"git":{"createdTime":1745907928000,"updatedTime":1745907928000,"contributors":[{"name":"Yideng","email":"oointer@163.com","commits":1}]},"readingTime":{"minutes":2.7,"words":810},"filePathRelative":"mysql/performance.md","localizedDate":"2025年4月29日","autoDesc":true}');export{d as comp,p as data};
